name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install OS dependencies
      if: startsWith(matrix.os, 'ubuntu')
      env:
        USECURL: 7.43.0-openssl11-gssapi-libssh2
        USESSL: openssl
        USEOPENSSL: 1.1.1d
      run: |
        sudo apt install libcurl4-openssl-dev libssl-dev libgnutls28-dev python3-dev
      shell: bash
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        setup-python: 'false'
        mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
    - name: Install Win dependencies
      if: startsWith(matrix.os, 'windows')
      run: |
        pip3 install tests/pycurl-7.43.0.4-cp38-cp38-win_amd64.whl
      shell: cmd
    - name: Install Mac dependencies
      if: startsWith(matrix.os, 'macOS')
      env:
          LDFLAGS: "-L/usr/local/opt/openssl/lib -L/usr/local/opt/curl/lib"
          CPPFLAGS: "-I/usr/local/opt/openssl/include -I/usr/local/opt/curl/include"
          PYCURL_SSL_LIBRARY: openssl
      run: |
        brew upgrade
        brew uninstall --ignore-dependencies curl
        pip3 uninstall pycurl
        brew install openssl
        brew info openssl
        brew install curl-openssl
        export PATH="/usr/local/opt/curl/bin:$PATH"
        export PYCURL_CURL_CONFIG=/usr/local/opt/curl/bin/curl-config
        PYCURL_SSL_LIBRARY=openssl LDFLAGS="-L/usr/local/opt/openssl/lib" CPPFLAGS="-I/usr/local/opt/openssl/include" pip3 install pycurl --compile --no-cache-dir
    - name: Install python dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install -r requirements.txt
        pip3 install -r requirements_dev.txt
    - name: Tests and coverage
      env:
        QT_QPA_PLATFORM: offscreen
      run: |
        invoke coverage --gui
    - name: Lint
      run: |
        invoke lint
    - name: Coveralls report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls
