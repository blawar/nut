name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      env:
        USECURL: 7.68.0-openssl11-gssapi-libssh2
        USESSL: openssl
        USEOPENSSL: 1.1.1d
      run: |
        sudo apt install libcurl4-openssl-dev libssl-dev libgnutls28-dev python3-dev
      shell: bash
    - name: Install Windows dependencies
      continue-on-error: true # FIXME: verify pycurl backend
      if: startsWith(matrix.os, 'windows')
      run: |
        pip3 install tests/pycurl-7.44.1-cp39-cp39-win_amd64.whl
      shell: cmd
    - name: Install macOS dependencies
      if: startsWith(matrix.os, 'macOS')
      env:
        LDFLAGS: "-L/usr/local/opt/openssl/lib"
        CPPFLAGS: "-I/usr/local/opt/openssl/include"
        PYCURL_SSL_LIBRARY: openssl
      run: |
        brew upgrade
        brew uninstall --ignore-dependencies curl
        brew install curl
        pip install pycurl --compile --no-cache-dir
    - name: Install python dependencies
      run: |
        pip install --upgrade wheel
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
    - name: Execute tests and coverage report
      env:
        QT_QPA_PLATFORM: offscreen
      run: |
        invoke coverage --gui
    - name: Lint
      run: |
        invoke lint || python tests/pylint_exit.py $?
    - name: Upload code coverage report to Coveralls
      continue-on-error: true # FIXME: remove once coveralls.io is back online
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github
